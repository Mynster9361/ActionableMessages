name: Publish to PowerShell Gallery

on:
  release:
    types: [published]  # Only trigger when a release is published (not drafted or pre-released)

permissions:
  contents: read

jobs:
  publish:
    name: Publish to PowerShell Gallery
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}  # Check out the tagged release

      - name: Get Version from Tag
        id: version
        shell: pwsh
        run: |
          $Version = "${{ github.event.release.tag_name }}".TrimStart('v')
          echo "version=$Version" >> $env:GITHUB_OUTPUT

          # Verify the manifest version matches the release tag
          $ManifestPath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "ActionableMessages.psd1"
          $ModuleInfo = Import-PowerShellDataFile $ManifestPath
          $ManifestVersion = $ModuleInfo.ModuleVersion

          if ($Version -ne $ManifestVersion) {
            Write-Warning "Module manifest version ($ManifestVersion) does not match release tag ($Version)"
          }

      - name: Run Tests
        shell: pwsh
        run: |
          Install-Module Pester -Force -SkipPublisherCheck
          Invoke-Pester -Path "./Tests" -PassThru

      - name: Publish to PowerShell Gallery
        shell: pwsh
        run: |
          # Get the release notes from the GitHub release
          $ReleaseNotes = @"
          ${{ github.event.release.body }}

          View the full release on GitHub: ${{ github.event.release.html_url }}
          "@

          # Publish the module
          Publish-Module -Path $env:GITHUB_WORKSPACE -NuGetApiKey ${{ secrets.ACTIONABLEMESSAGESPSGALLERY }} -Repository PSGallery -ReleaseNotes $ReleaseNotes -Verbose

      - name: Update Module Status
        if: success()
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.release.id }}
          body: |
            ### âœ… Published to PowerShell Gallery

            The module has been successfully published to the PowerShell Gallery.

            You can install it with:
            ```powershell
            Install-Module ActionableMessages -Scope CurrentUser
            ```