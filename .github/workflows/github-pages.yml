name: Build Module Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'Public/**'
      - 'docs/**'
      - '.github/workflows/github-pages.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ActionableMessages repository
        uses: actions/checkout@v3
        with:
          path: actionable-messages

      - name: Checkout GitHub Pages repository
        uses: actions/checkout@v3
        with:
          repository: Mynster9361/mynster9361.github.io
          token: ${{ secrets.GH_PAGES_TOKEN }}
          path: github-pages

      - name: Setup PowerShell
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Install PowerShell modules
        shell: pwsh
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module -Name PlatyPS -Force

      - name: Generate docs
        shell: pwsh
        run: |
          # Import module from ActionableMessages repo
          Import-Module ./actionable-messages/ActionableMessages.psd1 -Force

          # Create module collection directory in GitHub Pages repo
          $targetDir = "./github-pages/_powershell_modules/actionablemessages"
          New-Item -ItemType Directory -Path $targetDir -Force

          # Generate command docs
          $cmdDocsPath = "$targetDir/commands"
          New-Item -ItemType Directory -Path $cmdDocsPath -Force
          New-MarkdownHelp -Module ActionableMessages -OutputFolder $cmdDocsPath -Force

          # Add front matter to command pages
          $cmdFiles = Get-ChildItem -Path "$cmdDocsPath" -Filter "*.md"
          foreach($file in $cmdFiles) {
            $content = Get-Content -Path $file.FullName -Raw
            $cmdName = $file.BaseName

            $frontMatter = @"
---
layout: page
title: $cmdName
permalink: /modules/actionablemessages/commands/$cmdName/
---

"@

            $newContent = $frontMatter + $content
            Set-Content -Path $file.FullName -Value $newContent
          }

          # Create commands index page
          $commandsIndexPath = "$cmdDocsPath/index.md"
          @"
---
layout: page
title: ActionableMessages Commands
permalink: /modules/actionablemessages/commands/
---

# ActionableMessages Commands

$(Get-Command -Module ActionableMessages | ForEach-Object { "- [``$($_.Name)``]($($_.Name)/)" } | Sort-Object)
"@ | Out-File -FilePath $commandsIndexPath -Encoding utf8

          # Create main index page with Jekyll front matter
          @"
---
layout: page
title: ActionableMessages PowerShell Module
permalink: /modules/actionablemessages/
---

# ActionableMessages PowerShell Module

A PowerShell module for creating Microsoft Actionable Messages.

## Installation

```powershell
Install-Module -Name ActionableMessages -Scope CurrentUser
```

## Quick Start

```powershell
$card = New-AMCard -ThemeColor "#0078D7"
Add-AMElement -InputObject $card -Element (New-AMTextBlock -Text "Hello, World!")
$jsonCard = Export-AMCard -Card $card
```

## Command Reference

$(Get-Command -Module ActionableMessages | ForEach-Object { "- [``$($_.Name)``](commands/$($_.Name)/)" } | Sort-Object)
"@ | Out-File -FilePath "$targetDir/index.md" -Encoding utf8

      - name: Commit documentation to GitHub Pages repo
        run: |
          cd github-pages
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./_powershell_modules
          git commit -m "Update ActionableMessages module documentation" || echo "No changes to commit"
          git push