name: Draft Release

on:
  workflow_dispatch:
    inputs:
      versionBump:
        description: 'Version bump type (major, minor, patch)'
        required: true
        default: 'patch'
      releaseNotes:
        description: 'Additional release notes'
        required: false

permissions:
  contents: write

jobs:
  release:
    name: Draft Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Module Version
        id: version
        shell: pwsh
        run: |
          $ManifestPath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "ActionableMessages.psd1"
          $Manifest = Import-PowerShellDataFile $ManifestPath
          $CurrentVersion = [Version]$Manifest.ModuleVersion

          $VersionBump = "${{ github.event.inputs.versionBump }}"

          switch ($VersionBump) {
            "major" { $NewVersion = [Version]::new($CurrentVersion.Major + 1, 0, 0) }
            "minor" { $NewVersion = [Version]::new($CurrentVersion.Major, $CurrentVersion.Minor + 1, 0) }
            "patch" { $NewVersion = [Version]::new($CurrentVersion.Major, $CurrentVersion.Minor, $CurrentVersion.Build + 1) }
            default { $NewVersion = $CurrentVersion }
          }

          Update-ModuleManifest -Path $ManifestPath -ModuleVersion $NewVersion

          Write-Host "Updated version from $CurrentVersion to $NewVersion"
          echo "new_version=$NewVersion" >> $env:GITHUB_OUTPUT

      - name: Update Changelog
        id: changelog
        uses: natescherer/changelog-management-action@v1
        with:
          mode: release
          releaseVersion: ${{ steps.version.outputs.new_version }}

      - name: Run Tests
        shell: pwsh
        run: |
          Install-Module Pester -Force -SkipPublisherCheck
          Invoke-Pester -Path "./Tests" -PassThru

      - name: Package Module
        shell: pwsh
        run: |
          $ModuleVersion = "${{ steps.version.outputs.new_version }}"
          $ZipFileName = "ActionableMessages-$ModuleVersion.zip"
          $ZipFilePath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath $ZipFileName

          # Create a temp directory for the module files
          $TempDir = Join-Path -Path $env:TEMP -ChildPath "ActionableMessages"
          New-Item -Path $TempDir -ItemType Directory -Force

          # Copy module files to temp directory
          Copy-Item -Path "$env:GITHUB_WORKSPACE\*" -Destination $TempDir -Recurse -Exclude @(".git", ".github")

          # Create zip file
          Compress-Archive -Path "$TempDir\*" -DestinationPath $ZipFilePath -Force

      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{ steps.version.outputs.new_version }}
          message: "Release v${{ steps.version.outputs.new_version }}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.version.outputs.new_version }}
          tag_name: v${{ steps.version.outputs.new_version }}
          body: |
            # ActionableMessages v${{ steps.version.outputs.new_version }}

            ## Changes
            ${{ steps.changelog.outputs.releasenotes }}

            ${{ github.event.inputs.releaseNotes }}
          files: |
            ActionableMessages-${{ steps.version.outputs.new_version }}.zip
          draft: true
